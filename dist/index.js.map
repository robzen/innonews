{"version":3,"sources":["../index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["require(\"babel-polyfill\");\r\nimport Koa from 'koa';\r\nimport send from 'koa-send';\r\nimport Router from 'koa-router';\r\nimport News from './news';\r\nimport ImageUtils from './image-utils';\r\nimport User from './user';\r\n\r\nconst app = new Koa();\r\nconst router = new Router();\r\nconst news = new News();\r\nconst imageUtils = new ImageUtils();\r\n\r\nconst port = 3000;\r\nconst ipUsers = [];\r\n\r\n//error handling\r\napp.use(async(ctx, next) => {\r\n    try {\r\n        await next();\r\n    } catch (err) {\r\n        ctx.body = {message: err.message};\r\n        ctx.status = err.status || 500;\r\n    }\r\n});\r\n\r\napp.use(router.routes());\r\n\r\nrouter.get('/news/:newsSource?/:newsSortBy?/:updateMinutes?', async(ctx) => {\r\n    //user handling\r\n    let ip = ctx.request.ip.replace(/\\W/g, '-');\r\n    let userAgent = ctx.headers['user-agent'];\r\n    console.log(`request: ${userAgent} - newsSource: ${ctx.params.newsSource || '-'}, newsSortBy: ${ctx.params.newsSortBy || '-'}, updateMinutes: ${ctx.params.updateMinutes || '-'}`);\r\n    ctx.state.user = await getUser(ipUsers, ip, userAgent, {\r\n        newsSource: ctx.params.newsSource,\r\n        newsSortBy: ctx.params.newsSortBy,\r\n        updateMinutes: ctx.params.updateMinutes\r\n    });\r\n\r\n    //if url has/settings got changed -> load new images\r\n    if (ctx.state.user.getLastQuery() !== ctx.request.url) {\r\n        await getNewsImages(ctx.state.user);\r\n        ctx.state.user.setLastQuery(ctx.request.url);\r\n    }\r\n\r\n    //update news images in the background if updateInterval time is reached\r\n    let updateInterval = ctx.state.user.getSettings().updateMinutes;\r\n    let lastUpdate = ctx.state.user.getLastUpdate();\r\n    if (lastUpdate + updateInterval * 60 * 1000 <= Date.now()) {\r\n        getNewsImages(ctx.state.user);\r\n    }\r\n\r\n    await send(ctx, ctx.state.user.getNextImage());\r\n});\r\n\r\n//start server\r\napp.listen(port);\r\nconsole.log('listening on port ' + port);\r\n\r\nconst getUser = async(users, ip, userAgent, givenSettings) => {\r\n    for (let i = 0; i < users.length; i++) {\r\n        let existingUser = users[i];\r\n\r\n        if (existingUser.getIp() === ip) {\r\n            existingUser.setSettings(givenSettings);\r\n            return existingUser;\r\n        }\r\n    }\r\n\r\n    //register new user and download news images\r\n    let newUser = new User(ip, userAgent);\r\n    newUser.setSettings(givenSettings);\r\n    users.push(newUser);\r\n    console.log(`new user registered: IP: ${ip}, Innovaphone Version: ${newUser.getInnovaphoneVersion()}, Settings: ${JSON.stringify(newUser.getSettings())}`);\r\n\r\n    return newUser;\r\n};\r\n\r\nconst getNewsImages = async user => {\r\n    console.log('updating images for user: ' + user.getIp());\r\n\r\n    return new Promise((resolve, reject) => {\r\n        news.get(user.getSettings().newsSource, user.getSettings().newsSortBy)\r\n            .then(newsResponse => {\r\n                let displaySettings = user.getDisplaySettings();\r\n\r\n                user.setLastUpdate(Date.now());\r\n                user.resetImages();\r\n\r\n                newsResponse.articles.forEach(function (article, i) {\r\n                    if (article.urlToImage != null) { //only articles with images\r\n                        imageUtils.download(article.urlToImage, `images/${user.getIp()}/${user.getSettings().newsSource}_${i}`)\r\n                                  .then(fileName => {\r\n                                      //console.log(`image ${i} downloaded.`);\r\n                                      imageUtils.edit(fileName, displaySettings.width, displaySettings.height, displaySettings.paddingBottom, article.title)\r\n                                                .then(imgFile => {\r\n                                                    return imgFile;\r\n                                                })\r\n                                                .then(imgFile => {\r\n                                                    console.log(`image ${imgFile} added.`);\r\n                                                    user.addImage(imgFile);\r\n\r\n                                                    //check if done\r\n                                                    if (i + 1 >= newsResponse.articles.length) {\r\n                                                        resolve();\r\n                                                    }\r\n                                                })\r\n                                                .catch(err => {\r\n                                                    console.log('error while editing image', err);\r\n\r\n                                                    //check if done\r\n                                                    if (i + 1 >= newsResponse.articles.length) {\r\n                                                        resolve();\r\n                                                    }\r\n                                                });\r\n                                  })\r\n                                  .catch(err => {\r\n                                      console.log('error while donwloading image', err);\r\n\r\n                                      //check if done\r\n                                      if (i + 1 >= newsResponse.articles.length) {\r\n                                          resolve();\r\n                                      }\r\n                                  })\r\n                    } else {\r\n                        //check if done\r\n                        if (i + 1 >= newsResponse.articles.length) {\r\n                            resolve();\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                reject('error while getting news: ' + err);\r\n            });\r\n    });\r\n};"]}